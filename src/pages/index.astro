t add .

---
import Layout from '../layouts/Layout.astro';
---

<Layout>
	<section class="seccion seccion-main" id="main" data-index="0" data-status="active">
		<div class="background-frame"></div>
		<picture class="main-photo">
			<img src="../public/img/imagen_portada_high.jpeg" alt="">
		</picture>
		<div class="our-names">
			<span class="his-name">Daniel</span>
			<span class="her-name">Ayde</span>
		</div>
		<span class="sub-titulo-portada">Nos casaremooos!</span>
		<span class="texto-portada">Si que si, como lo escucharon, duelale al que le duela esto va porque va mi gente,
			la boda va a ser severo espectaculo, no invitamos a petro nada más porque no queríamos pero facilito
			más espectacular que el medio tiempo de cualquier superbowl de la historia, nos vamos!
		</span>
	</section>
	<section class="seccion seccion-our-story" id="our-story" data-index="1" data-status="unknown">
	</section>
	<section class="seccion seccion-info" id="info" data-index="2" data-status="unknown">
	</section>
</Layout>

<style>
	.seccion {
		width: 100%;
		height: 100vh;
		position: absolute;
	}
	.seccion-main {
		background-color: rgba(241,240,238,255);
		top: 0px;
	}
	.seccion-our-story {
		background-color: blue;
		top: 100vh;
	}
	.seccion-info {
		background-color: chocolate;
		top: 100vh;
	}
	.move-up{
		top: -100vh;
		transition: all 1s;
	}
	.move-down{
		top: 100vh;
		transition: all 1s;
	}
	.move-center{
		top: 0px;
		transition: top 1s;
	}
	.background-frame{
		height: 70vh;
		width: 40vw;
		padding: 0;
		background-color: rgba(247,247,247,255);
		border-top-left-radius: 50%;
		border-top-right-radius: 50%;
		position: absolute;
		bottom: 0px;
		left: 20vw;
	}

	.main-photo{
		position: absolute;
		bottom: 0px;
		left: 40vw;
	}
	.main-photo img{
		height: 110vh;
		width: 50vw;
		float: left;
		object-fit: cover;
		border-top-left-radius: 90%;
		border-top-right-radius: 90%;
	}

	.our-names{
		position: absolute;
		top: 35vh;
		left: 12vw;
		display: flex;	
		gap: 2.5rem;
		font-size: 9.2vw;
		font-weight: lighter;
	}
	.his-name{
		font-family: Georgia, 'Times New Roman', Times, serif;
		color: rgba(217,203,194,255);
	}
	.her-name{
		font-family: Georgia, 'Times New Roman', Times, serif;
		color: rgba(251,255,255,255);
	}

	.sub-titulo-portada{
		font-family: Arial, Helvetica, sans-serif;
		color: rgba(76,64,84,255);
		font-size: 2vw;
		position: absolute;
		top: 57vh;
		left: 12.5vw;
	}
	.texto-portada{
		font-family: Arial, Helvetica, sans-serif;
		line-height: 3vh;
		color: rgba(76,64,84,255);
		font-size: 1vw;
		width: 35vw;
		position: absolute;
		top: 67vh;
		left: 12.5vw;
	}

</style>

<script>
	let touchPositionY: number = 0;
	let touchStartY: number = 0;
	let deltaY: number = 0;

	const debounce = (callback: Function, waitTime: number) => {
		let timerId: ReturnType<typeof setTimeout>;
		let execute = true;
		return () => {
			if(execute) {
				const executed = callback();
				if(executed) {
					execute = false;
				}
			}
			clearTimeout(timerId);
			timerId = setTimeout(() => {
				execute = true
			}, waitTime) 
		}
	}

	const upOrDown = () : boolean => {
		const currentSection: HTMLElement|null = document.querySelector(`[data-status="active"]`);

		if(!currentSection || !currentSection.getAttribute('data-index')) return false;

		if(deltaY < 0) {
			const nextIndex = +(currentSection.getAttribute('data-index') ?? 1) - 1;
			const nextSection: HTMLElement|null = document.querySelector(`[data-index="${nextIndex}"]`);
			if(!nextSection) return false;
			currentSection.dataset.status = "unknown";
			currentSection.classList.remove('move-center');
			currentSection.classList.add('move-down');
			nextSection.dataset.status = "active";
			nextSection.classList.remove('move-up');
			nextSection.classList.add('move-center');

			return true;
		}
		if(deltaY > 0) {
			const nextIndex = +(currentSection.getAttribute('data-index') ?? -1) + 1;
			const nextSection: HTMLElement|null = document.querySelector(`[data-index="${nextIndex}"]`);
			if(!nextSection) return false;
			currentSection.dataset.status = "unknown";
			currentSection.classList.remove('move-center');
			currentSection.classList.add('move-up');
			nextSection.dataset.status = "active";
			nextSection.classList.remove('move-down');
			nextSection.classList.add('move-center');
			return true;

		}
		return false;
	}

	const debounceUpOrDown = debounce(upOrDown, 500);
	
	const onScroll = (e: WheelEvent) => {
		deltaY = e.deltaY;
		debounceUpOrDown()
	}

	document.addEventListener('wheel', onScroll)

	document.addEventListener('touchstart', (e: TouchEvent) => {
		touchStartY	= e.touches[0].clientY;
	})

	document.addEventListener('touchmove', (e: TouchEvent) => {
		touchPositionY = e.touches[0].clientY;
	})

	document.addEventListener('touchend', () => {
		deltaY = touchStartY - touchPositionY;
		debounceUpOrDown();
	})

</script>

