---
import Layout from '../layouts/Layout.astro';
import Presentation from './Presentation.astro';
import Intro from './Intro.astro';
import OurStory from './OurStory.astro';
import Info from './Info.astro';
import LluviaSobres from './LluviaSobres.astro';
import DressCode from './DressCode.astro';
import MusicaMensaje from './MusicaMensaje.astro'
import Rsvp from './Rsvp.astro'
import '@fontsource/great-vibes';
import '@fontsource-variable/montserrat';


const { tipo = "", id = "" } = Astro.props;
---
<script src="/src/htmx.min.js"></script>
<script src="/src/htmx-json-enc.js"></script>

<Layout>
	
	<section class="seccion seccion-presentation" id="presentation" data-index="0" data-status="active">
		<Presentation tipo={tipo} id={id}></Presentation>
	</section>
	<section class="seccion seccion-intro" id="intro" data-index="1" data-status="unknown">
		<Intro></Intro>
	</section>
	<section class="seccion seccion-our-story" id="our-story" data-index="2" data-status="unknown">
		<OurStory></OurStory>
	</section>
	<section class="seccion seccion-info" id="info" data-index="3" data-status="unknown">
		<Info></Info>
	</section>
	<section class="seccion seccion-dresscode" id="dress-code" data-index="4" data-status="unknown">
		<DressCode></DressCode>
	</section>
	<section class="seccion seccion-lluvia" id="lluvia" data-index="5" data-status="unknown">
		<LluviaSobres></LluviaSobres>
	</section>
	<section class="seccion seccion-musica-mensaje" id="musica-mensaje" data-index="6" data-status="unknown">
		<MusicaMensaje tipo={tipo} id={id}></MusicaMensaje>
	</section>
	<section class="seccion seccion-rsvp" id="rsvp" data-index="7" data-status="unknown">
		<Rsvp tipo={tipo} id={id}></Rsvp>
	</section>

	<button class="arrow-up-container fade-button">
		<svg width="106.82mm" height="56.294mm" version="1.1" viewBox="0 0 106.82 56.294" xmlns="http://www.w3.org/2000/svg" xmlns:cc="http://creativecommons.org/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:xlink="http://www.w3.org/1999/xlink">
			<defs>
				<linearGradient id="linearGradient866" x1="105.96" x2="106.95" y1="132.71" y2="94.159" gradientTransform="matrix(1 0 0 -1 0 248.79)" gradientUnits="userSpaceOnUse">
					<stop style="stop-color:#6b1c18" offset="0"/>
					<stop style="stop-color:#946161;stop-opacity:0" offset="1"/>
				</linearGradient>
			</defs>
			<metadata>
				<rdf:RDF>
					<cc:Work rdf:about="">
						<dc:format>image/svg+xml</dc:format>
						<dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>
						<dc:title/>
					</cc:Work>
				</rdf:RDF>
			</metadata>
			<g transform="translate(-52.67 -96.25)">
				<path d="m56.205 149.01 35.983-35.983c3.2366-3.2366 6.4984-6.6199 9.7896-9.7846 1.1792-1.134 2.2638-1.9092 3.9688-1.9868 1.7949-0.0815 3.0401 0.839 4.2333 1.9868 3.2022 3.0792 6.3757 6.3706 9.525 9.52l36.248 36.248" style="fill:none;stroke-linejoin:round;stroke-width:10;stroke:url(#linearGradient866)"/>
			</g>
		</svg>
	</button>
	
	<button class="arrow-down-container">
		<svg width="106.82mm" height="56.294mm" version="1.1" viewBox="0 0 106.82 56.294" xmlns="http://www.w3.org/2000/svg" xmlns:cc="http://creativecommons.org/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:xlink="http://www.w3.org/1999/xlink">
			<defs>
				<linearGradient id="linearGradient867" x1="105.96" x2="106.95" y1="132.71" y2="94.159" gradientTransform="translate(0)" gradientUnits="userSpaceOnUse">
					<stop style="stop-color:#6b1c18" offset="0"/>
					<stop style="stop-color:#946161;stop-opacity:0" offset="1"/>
				</linearGradient>
			</defs>
			<metadata>
				<rdf:RDF>
					<cc:Work rdf:about="">
						<dc:format>image/svg+xml</dc:format>
						<dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>
						<dc:title/>
					</cc:Work>
				</rdf:RDF>
			</metadata>
			<g transform="translate(-52.67 -96.25)">
				<path d="m56.205 99.786 35.983 35.983c3.2366 3.2366 6.4984 6.6199 9.7896 9.7846 1.1792 1.134 2.2638 1.9092 3.9688 1.9868 1.7949 0.0815 3.0401-0.839 4.2333-1.9868 3.2022-3.0792 6.3757-6.3706 9.525-9.52l36.248-36.248" style="fill:none;stroke-linejoin:round;stroke-width:10;stroke:url(#linearGradient867)"/>
			</g>
		</svg>
	</button>
</Layout>

<style>

	/* 1920×1080 (9.94%)
	1536×864 (3.94%)
	1366×768 (6.22%)
	414×896 (4.21%)
	375×667 (3.74%) 
	360×640 (5.88%) */

	.seccion {
		width: 100vw;
		height: calc(var(--vh) * 100);
		position: absolute;
		background-repeat: no-repeat;
		background-position-x: center;
		background-size: cover;
	}
	.seccion-presentation{
		background-color: var(--third);
		top: 0px;
	}
	.seccion-intro {
		background-image: url(/img/BackgroundImage.png);
		opacity: 0;
		top: calc(var(--vh) * 100);
	}
	.seccion-our-story {
		background-image: url(/img/FondoPlaya.png);
		opacity: 0;
		top: calc(var(--vh) * 100);
	}
	.seccion-info {
		background-image: url(/img/BackgroundImage.png);
		opacity: 0;
		top: calc(var(--vh) * 100);
	}
	.seccion-dresscode{
		background-image: url(/img/BackgroundImage.png);
		opacity: 0;
		top: calc(var(--vh) * 100);
	}
	.seccion-lluvia{
		background-image: url(/img/FondoPlayaLluvia.png);
		opacity: 0;
		top: calc(var(--vh) * 100);
	}
	.seccion-musica-mensaje{
		background-image: url(/img/BackgroundImage.png);
		opacity: 0;
		top: calc(var(--vh) * 100);
	}
	.seccion-rsvp{
		background-image: url(/img/BackgroundImage.png);
		opacity: 0;
		top: calc(var(--vh) * 100);
	}

	.move-up{
		top: calc(var(--vh) * -100);
		opacity: 0;
		transition: top 1s, opacity 3s;
	}
	.move-down{
		top: calc(var(--vh) * 100);
		opacity: 0;
		transition: top 1s, opacity 3s;
	}
	.move-center{
		top: 0px;
		opacity: 1;
		transition: top 1s;
	}

	button {
		border: none;
		background-color: transparent;
		width: 100vw;
		transition: all .5s;
	}

	button svg {
		margin-top: calc(var(--vh) * 1);
		margin-bottom: calc(var(--vh) * 1);
		height: calc(var(--vh) * 5);
		opacity: .3;
	}
	button:hover svg {
		opacity: .8;
		transition: all .5s;
	}
	.arrow-up-container{
		position: absolute;
		top: 0px;
	}
	.arrow-down-container{
		position: absolute;
		bottom: 0px;
	}
	.fade-button{
		display: none;
	}

	@media (max-width: 1920px){
	}

	@media (max-width: 1366px){
	}

	@media (max-width: 430px){

		.seccion-intro {
			background-image: url(/img/BackgroundImage_small.png);
		}
		.seccion-our-story {
			background-image: url(/img/FondoPlaya_small.png);
		}
		.seccion-info {
			background-image: url(/img/BackgroundImage_small.png);
		}
		.seccion-dresscode{
			background-image: url(/img/BackgroundImage_small.png);
		}
		.seccion-lluvia{
			background-image: url(/img/FondoPlayaLluvia_small.png);
		}
		.seccion-musica-mensaje{
			background-image: url(/img/BackgroundImage_small.png);
		}
		.seccion-rsvp{
			background-image: url(/img/BackgroundImage_small.png);
		}
	}

</style>
<script>
	let touchPositionY: number|null = null;
	let touchStartY: number|null = null;
	let deltaY: number = 0;
	const arrowDown = document.querySelector('button.arrow-down-container')
	const arrowUp = document.querySelector('button.arrow-up-container')

	function setVisualHeight() {
		const vh = window.innerHeight * .01;
		document.documentElement.style.setProperty('--vh', `${vh}px`)
	};

	setVisualHeight();

	window.addEventListener('resize', setVisualHeight);

	const debounce = (callback: Function, waitTime: number) => {
		let timerId: ReturnType<typeof setTimeout>;
		let execute = true;
		return () => {
			if(execute) {

				const executed = callback();
				if(executed) {
					execute = false;
				}
			}
			clearTimeout(timerId);
			timerId = setTimeout(() => {
				execute = true;
			}, waitTime) 
		}
	}

	const upOrDown = () : boolean => {
		const currentSection: HTMLElement|null = document.querySelector(`[data-status="active"]`);

		if(!currentSection || !currentSection.getAttribute('data-index')) return false;
		// scroll up
		if(deltaY < -30) {
			const nextIndex = +(currentSection.getAttribute('data-index') ?? 1) - 1;
			const nextSection: HTMLElement|null = document.querySelector(`[data-index="${nextIndex}"]`);
			if(!nextSection) return false;
			currentSection.dataset.status = "unknown";
			currentSection.classList.remove('move-center');
			currentSection.classList.add('move-down');
			nextSection.dataset.status = "active";
			nextSection.classList.remove('move-up');
			nextSection.classList.add('move-center');

			arrowDown?.classList.remove('fade-button')
			if(+(nextSection.getAttribute('data-index') ?? 1) == 0){
				arrowUp?.classList.add('fade-button')
			}
			
			touchStartY = null;
			touchPositionY = null;
			return true;
		}
		// scroll down
		if(deltaY > 30) {
			const nextIndex = +(currentSection.getAttribute('data-index') ?? -1) + 1;
			const nextSection: HTMLElement|null = document.querySelector(`[data-index="${nextIndex}"]`);
			if(!nextSection) return false;
			currentSection.dataset.status = "unknown";
			currentSection.classList.remove('move-center');
			currentSection.classList.add('move-up');
			nextSection.dataset.status = "active";
			nextSection.classList.remove('move-down');
			nextSection.classList.add('move-center');

			touchStartY = null;
			touchPositionY = null;

			arrowUp?.classList.remove('fade-button')
			if(+(nextSection.getAttribute('data-index') ?? 1) == 7){
				arrowDown?.classList.add('fade-button')
			}

			return true;

		}
		touchStartY = null;
		touchPositionY = null;
		return false;
	}

	const debounceUpOrDown = debounce(upOrDown, 500);
	
	const onScroll = (e: WheelEvent) => {
		deltaY = e.deltaY;
		debounceUpOrDown()
	}

	document.addEventListener('wheel', onScroll)

	document.addEventListener('touchstart', (e: TouchEvent) => {

		if(e.touches.length > 1){
			return;
		}

		if(e.target?.nodeName === 'INPUT'){
			return;
		}
		if(e.target?.nodeName === 'TEXTAREA'){
			return;
		}
		if(e.target?.nodeName === 'BUTTON'){
			return;
		}
		if(e.target?.nodeName === 'A'){
			return;
		}
		if(e.target?.parentElement?.nodeName === 'BUTTON'){
			return;
		}
		if(e.target?.parentElement?.nodeName === 'A'){
			return;
		}
		if(e.target?.parentElement?.parentElement?.nodeName === 'BUTTON'){
			return;
		}
		if(e.target?.parentElement?.parentElement?.nodeName === 'A'){
			return;
		}
		if(e.target?.parentElement?.parentElement?.parentElement?.nodeName === 'BUTTON'){
			return;
		}
		if(e.target?.parentElement?.parentElement?.parentElement?.parentElement?.nodeName === 'BUTTON'){
			return;
		}
		touchStartY	= e.touches[0].clientY;
	})

	document.addEventListener('touchmove', (e: TouchEvent) => {
		if(e.touches.length > 1){
			return;
		}
		touchPositionY = e.touches[0].clientY;
	})

	document.addEventListener('touchend', () => {
		if(touchStartY === null) {
			return;
		}
		if(touchPositionY === null) {
			return;
		}
		deltaY = (touchStartY ?? 0) - (touchPositionY ?? 0);
		debounceUpOrDown();
	})

	document.addEventListener('keydown', function(e: KeyboardEvent){
		if(e.key === "ArrowUp"){
			deltaY = -100
			debounceUpOrDown();
			return;
		}
		if(e.key === "ArrowDown"){
			deltaY = 100
			debounceUpOrDown();
			return;
		}
	})

	arrowUp?.addEventListener('click', function(){
		deltaY = -100
		debounceUpOrDown();

	})

	arrowDown?.addEventListener('click', function(){
		deltaY = 100
		debounceUpOrDown();
	})

</script>